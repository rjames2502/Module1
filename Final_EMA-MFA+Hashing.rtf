{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red15\green112\blue1;\red255\green255\blue254;\red0\green0\blue0;
\red157\green0\blue210;\red0\green0\blue255;\red144\green1\blue18;\red25\green25\blue25;\red255\green255\blue255;
\red101\green76\blue29;}
{\*\expandedcolortbl;;\cssrgb\c0\c50196\c0;\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;
\cssrgb\c68627\c0\c85882;\cssrgb\c0\c0\c100000;\cssrgb\c63922\c8235\c8235;\cssrgb\c12941\c12941\c12941;\cssrgb\c100000\c100000\c100000;
\cssrgb\c47451\c36863\c14902;}
\paperw11900\paperh16840\margl1440\margr1440\vieww23500\viewh13460\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # add sqlite library\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 import\cf0 \strokec4  sqlite3\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # add PYOTP library\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 !\cf0 \cb3 \strokec4 pip install pyotp\cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 import\cf0 \strokec4  pyotp\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 !\cf0 \cb3 \strokec4 pip install bcrypt\cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 import\cf0 \strokec4  bcrypt\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #create base SQL DB\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 connection = sqlite3.connect(\cf7 \cb3 \strokec7 "test1_db"\cf0 \cb3 \strokec4 )\cb1 \
\cb3 cursor = connection.cursor()\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #create table called "users" in test_db database - username must be a unique field\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 cursor.execute(\cf7 \cb3 \strokec7 "CREATE TABLE users (name VARCHAR(25) UNIQUE, city VARCHAR(20), age INTEGER, password VARCHAR(20)) "\cf0 \cb3 \strokec4 )\cb1 \
\
\pard\pardeftab720\sa120\partightenfactor0

\f1\fs32 \cf8 \cb9 \outl0\strokewidth0 ** Unmodified Username/Password combinations before Passwords are hashed - Kasia 123456, Mary 654321, Viktoria abcdef, Winnie fedcba **\
\
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \outl0\strokewidth0 \strokec2 # Perform hashing algorithm on passwords\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 import\cf0 \strokec4  bcrypt\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 password = b\cf7 \cb3 \strokec7 "123456"\cf0 \cb1 \strokec4 \
\
\cb3 salt = bcrypt.gensalt()\cb1 \
\cb3 hashed = bcrypt.hashpw(password,salt)\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (salt)\cb1 \
\cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (hashed)\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Perform hashing algorithm on passwords\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 import\cf0 \strokec4  bcrypt\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 password = b\cf7 \cb3 \strokec7 "654321"\cf0 \cb1 \strokec4 \
\
\cb3 salt = bcrypt.gensalt()\cb1 \
\cb3 hashed = bcrypt.hashpw(password,salt)\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (salt)\cb1 \
\cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (hashed)\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Perform hashing algorithm on passwords\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 import\cf0 \strokec4  bcrypt\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 password = b\cf7 \cb3 \strokec7 "abcdef"\cf0 \cb1 \strokec4 \
\
\cb3 salt = bcrypt.gensalt()\cb1 \
\cb3 hashed = bcrypt.hashpw(password,salt)\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (salt)\cb1 \
\cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (hashed)\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Perform hashing algorithm on passwords\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 import\cf0 \strokec4  bcrypt\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 password = b\cf7 \cb3 \strokec7 "fedcba"\cf0 \cb1 \strokec4 \
\
\cb3 salt = bcrypt.gensalt()\cb1 \
\cb3 hashed = bcrypt.hashpw(password,salt)\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (salt)\cb1 \
\cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (hashed)\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #Add records to database with already hashed password\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #Passwords stored in database encrypted, for additional security\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 cursor.execute(\cf7 \cb3 \strokec7 "INSERT INTO users VALUES ('Kasia', 'kracow', 30, '$2b$12$O.EIrhTvYzp1CJT.aYp9o.8DKT4lu965haGAgXHOyLix4m/Wr8opq') "\cf0 \cb3 \strokec4 )\cb1 \
\cb3 cursor.execute(\cf7 \cb3 \strokec7 "INSERT INTO users VALUES ('Viktoria', 'Dublin', 30, '$2b$12$wEAIsA/lhFZHtiPxPYcUI.aJf.RyN1i94woIPUt.5vKigCxjj6hJu') "\cf0 \cb3 \strokec4 )\cb1 \
\cb3 cursor.execute(\cf7 \cb3 \strokec7 "INSERT INTO users VALUES ('Mary', 'Galway', 28, '$2b$12$UqmGWfn3.3w6REx5E5Xo8uWMdGieDGHUGCfHZLQRVZ1xIUIq1re.y') "\cf0 \cb3 \strokec4 )\cb1 \
\cb3 cursor.execute(\cf7 \cb3 \strokec7 "INSERT INTO users VALUES ('Winnie', 'Werfen', 60, '$2b$12$.yWYjhDCv1qarQRHYjpI9.xDhvcVMnKbzcIMzlIEC7UBbXGpcTAom') "\cf0 \cb3 \strokec4 )\cb1 \
\
\
\
\
\cb3 username = \cf7 \cb3 \strokec7 "Kasia"\cf0 \cb1 \strokec4 \
\cb3 password = \cf7 \cb3 \strokec7 "123456"\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #Password is unencrypted text\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 statement = \cf6 \cb3 \strokec6 f\cf7 \cb3 \strokec7 "SELECT name from users WHERE name='\cf0 \cb3 \strokec4 \{username\}\cf7 \cb3 \strokec7 ' AND Password = '\cf0 \cb3 \strokec4 \{password\}\cf7 \cb3 \strokec7 ';"\cf0 \cb1 \strokec4 \
\cb3 cursor.execute(statement)\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 import\cf0 \strokec4  pyotp\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Code fails most times without reimporting pyotp again here\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Generate time-based One Time Password\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 totp = pyotp.TOTP(\cf7 \cb3 \strokec7 'base32secret3232'\cf0 \cb3 \strokec4 )\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #Display TOTP on screen\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (\cf7 \cb3 \strokec7 "Your OTP is:"\cf0 \cb3 \strokec4 ,totp.now())\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Enter generated TOTP for authentication\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 if\cf0 \strokec4  totp.verify(\cf7 \cb3 \strokec7 '909777'\cf0 \cb3 \strokec4 )==\cf6 \cb3 \strokec6 True\cf0 \cb3 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3   \cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (\cf7 \cb3 \strokec7 "Login Successful"\cf0 \cb3 \strokec4 )\cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 else\cf0 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3  \cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (\cf7 \cb3 \strokec7 "Access Denied"\cf0 \cb3 \strokec4 )\cb1 \
\
\
\
\
\cb3 username = \cf7 \cb3 \strokec7 "Viktoria"\cf0 \cb1 \strokec4 \
\cb3 password = \cf7 \cb3 \strokec7 "abcdef"\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #Password is unencrypted text\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 statement = \cf6 \cb3 \strokec6 f\cf7 \cb3 \strokec7 "SELECT name from users WHERE name='\cf0 \cb3 \strokec4 \{username\}\cf7 \cb3 \strokec7 ' AND Password = '\cf0 \cb3 \strokec4 \{password\}\cf7 \cb3 \strokec7 ';"\cf0 \cb1 \strokec4 \
\cb3 cursor.execute(statement)\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 import\cf0 \strokec4  pyotp\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Code fails most times without reimporting pyotp again here\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Generate time-based One Time Password\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 totp = pyotp.TOTP(\cf7 \cb3 \strokec7 'base32secret3232'\cf0 \cb3 \strokec4 )\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #Display TOTP on screen\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (\cf7 \cb3 \strokec7 "Your OTP is:"\cf0 \cb3 \strokec4 ,totp.now())\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Enter generated TOTP for authentication\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 if\cf0 \strokec4  totp.verify(\cf7 \cb3 \strokec7 '142238'\cf0 \cb3 \strokec4 )==\cf6 \cb3 \strokec6 True\cf0 \cb3 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3   \cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (\cf7 \cb3 \strokec7 "Login Successful"\cf0 \cb3 \strokec4 )\cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 else\cf0 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3  \cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (\cf7 \cb3 \strokec7 "Access Denied"\cf0 \cb3 \strokec4 )\cb1 \
\
\
\
\
\cb3 username = \cf7 \cb3 \strokec7 "Mary"\cf0 \cb1 \strokec4 \
\cb3 password = \cf7 \cb3 \strokec7 "654321"\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #Password is unencrypted text\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 statement = \cf6 \cb3 \strokec6 f\cf7 \cb3 \strokec7 "SELECT name from users WHERE name='\cf0 \cb3 \strokec4 \{username\}\cf7 \cb3 \strokec7 ' AND Password = '\cf0 \cb3 \strokec4 \{password\}\cf7 \cb3 \strokec7 ';"\cf0 \cb1 \strokec4 \
\cb3 cursor.execute(statement)\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 import\cf0 \strokec4  pyotp\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Code fails most times without reimporting pyotp again here\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Generate time-based One Time Password\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 totp = pyotp.TOTP(\cf7 \cb3 \strokec7 'base32secret3232'\cf0 \cb3 \strokec4 )\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #Display TOTP on screen\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (\cf7 \cb3 \strokec7 "Your OTP is:"\cf0 \cb3 \strokec4 ,totp.now())\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Enter generated TOTP for authentication\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 if\cf0 \strokec4  totp.verify(\cf7 \cb3 \strokec7 '409062'\cf0 \cb3 \strokec4 )==\cf6 \cb3 \strokec6 True\cf0 \cb3 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3   \cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (\cf7 \cb3 \strokec7 "Login Successful"\cf0 \cb3 \strokec4 )\cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 else\cf0 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3  \cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (\cf7 \cb3 \strokec7 "Access Denied"\cf0 \cb3 \strokec4 )\cb1 \
\
\
\
\
\cb3 username = \cf7 \cb3 \strokec7 "Winnie"\cf0 \cb1 \strokec4 \
\cb3 password = \cf7 \cb3 \strokec7 "fedcba"\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #Password is unencrypted text\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 statement = \cf6 \cb3 \strokec6 f\cf7 \cb3 \strokec7 "SELECT name from users WHERE name='\cf0 \cb3 \strokec4 \{username\}\cf7 \cb3 \strokec7 ' AND Password = '\cf0 \cb3 \strokec4 \{password\}\cf7 \cb3 \strokec7 ';"\cf0 \cb1 \strokec4 \
\cb3 cursor.execute(statement)\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 import\cf0 \strokec4  pyotp\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Code fails most times without reimporting pyotp again here\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Generate time-based One Time Password\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 totp = pyotp.TOTP(\cf7 \cb3 \strokec7 'base32secret3232'\cf0 \cb3 \strokec4 )\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #Display TOTP on screen\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (\cf7 \cb3 \strokec7 "Your OTP is:"\cf0 \cb3 \strokec4 ,totp.now())\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #\cf0 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Enter generated TOTP for authentication\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 if\cf0 \strokec4  totp.verify(\cf7 \cb3 \strokec7 '559148'\cf0 \cb3 \strokec4 )==\cf6 \cb3 \strokec6 True\cf0 \cb3 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3   \cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (\cf7 \cb3 \strokec7 "Login Successful"\cf0 \cb3 \strokec4 )\cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 else\cf0 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3  \cf10 \cb3 \strokec10 print\cf0 \cb3 \strokec4 (\cf7 \cb3 \strokec7 "Access Denied"\cf0 \cb3 \strokec4 )\cb1 \
}